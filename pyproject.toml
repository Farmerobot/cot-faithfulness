[tool.poetry]
name = "cot_faithfulness"
version = "0.1.0"
description = "cot"
authors = ["Marcin Korcz", "Andrii Chmutov", "Vasyl Korzavatykh", "Mateusz Idziejczak", "Mateusz Stawicki"]
readme = "README.md"
package-mode = true
packages = [
    { include = "cot_faithfulness", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
openai = "^1.52.2"
pydantic = "^2.9.2"
langchain = "^0.3.4"
langchain-community = "^0.3.3"
langchain-openai = "^0.2.3"
langchain-google-genai = "^2.0.1"
streamlit = "^1.39.0"
st-annotated-text = "^4.0.1"
plotly = "^5.24.1"
python-dotenv = "^1.0.1"
scikit-learn = "^1.5.2"
watchdog = "^6.0.0"
pandas = "^2.2.3"
krippendorff = "^0.8.0"
simpledorff = "^0.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
main = "scripts.main:main"
tournament = "scripts.tournament:main"

[tool.ruff]
preview = true

[tool.ruff.lint]
select = [
    "ANN001",   # Missing type annotation for function argument
    "DOC",      # Pydoclint
    "D",        # Pydocstyle
    "E",        # Pycodestyle
    "F",        # Pyflakes
    "I",        # Isort
    "Q",        # Quotes
]

ignore = [
    "D1",       # Missing docstrings
    "D205",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
